// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                      String    @id @default(auto()) @map("_id") @db.ObjectId
  name                    String
  email                   String   @unique
  emailVerified           DateTime?
  hashedPassword          String
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  defaultData             UserDataSet[]
}

model UserDataSet{
  id                      String    @id @default(auto()) @map("_id") @db.ObjectId

  dataSetName             String

  photo                   String?
  name                    String?
  surname                 String?
  dateOfBirth             String?
  city                    String?
  cityOfBirth             String?
  citizenship             String?
  gender                  String?
  phoneNumber             String?
  email                   String?
  websiteURL              String?

  experience              Experience[]
  education               Education[]
  certificates            Certificates[]
  courses                 Courses[]
  skills                  Skill[]
  achievements            Achievement[]
  hobbys                  Hobby[]
  characteristic          Characteristic[]
  additionalActivity      AdditionalActivity[]

  authorEmail             String
  author                  User   @relation(fields: [authorEmail], references: [email])

  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
}

model Experience{
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  dataSetId               String       @db.ObjectId
  dataSet                 UserDataSet  @relation(fields: [dataSetId], references: [id])           

  companyName             String
  city                    String
  position                String
  startDate               String
  endDate                 String
  additionalInfo          String
}

model Certificates{
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  dataSetId               String       @db.ObjectId
  dataSet                 UserDataSet  @relation(fields: [dataSetId], references: [id])     

  certificateName         String
  endDate                 String
  additionalInfo          String
}

model Education{
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  dataSetId               String       @db.ObjectId
  dataSet                 UserDataSet  @relation(fields: [dataSetId], references: [id])     

  level                   String
  city                    String
  institutionName         String
  startDate               String
  endDate                 String
  additionalInfo          String
}

model Courses{
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  dataSetId               String       @db.ObjectId
  dataSet                 UserDataSet  @relation(fields: [dataSetId], references: [id])

  courseName              String
  startDate               String
  endDate                 String
  additionalInfo          String
}

model Skill{
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  dataSetId               String       @db.ObjectId
  dataSet                 UserDataSet  @relation(fields: [dataSetId], references: [id])

  skillName               String
  additionalInfo          String
}

model Achievement{
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  dataSetId               String       @db.ObjectId
  dataSet                 UserDataSet  @relation(fields: [dataSetId], references: [id])

  achievementName         String
  additionalInfo          String
}

model Hobby{
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  dataSetId               String       @db.ObjectId
  dataSet                 UserDataSet  @relation(fields: [dataSetId], references: [id])

  hobbyName               String
  additionalInfo          String
}

model Characteristic{
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  dataSetId               String       @db.ObjectId
  dataSet                 UserDataSet  @relation(fields: [dataSetId], references: [id])

  characteristicName      String
  additionalInfo          String
}

model AdditionalActivity{
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  dataSetId               String       @db.ObjectId
  dataSet                 UserDataSet  @relation(fields: [dataSetId], references: [id])

  activityName            String
  city                    String
  startDate               String
  endDate                 String
  additionalInfo          String
}